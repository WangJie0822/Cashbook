name: GitHub Release with APKs

on:
  push:
    tags:
      - 'v*'
      - '!v**_pre'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          validate-wrappers: true
          gradle-home-cache-cleanup: true

      - name: Install GMD image for baseline profile generation
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager "system-images;android-34;aosp_atd;x86_64"

      - name: Accept Android licenses
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Build release variant including baseline profile generation
        run: export BUILD_TAG_NAME=${{ github.ref_name }} ; echo $BUILD_TAG_NAME ; ./gradlew :app:assembleOnlineRelease :app:assembleOfflineRelease
             -Pandroid.testInstrumentationRunnerArguments.androidx.benchmark.enabledRules=BaselineProfile
             -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
             -Pandroid.experimental.testOptions.managedDevices.emulator.showKernelLogging=true
             -Pandroid.experimental.androidTest.numManagedDeviceShards=1
             -Pandroid.experimental.testOptions.managedDevices.maxConcurrentDevices=1

      - name: Android Sign
        # You may pin to the exact commit or the version.
        uses: Tlaster/android-sign@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUILD_TOOLS_VERSION: "34.0.0"
          TZ: Asia/Shanghai
        with:
          # The directory to find your release to sign
          releaseDirectory: outputs/apk/
          # The key used to sign your release in base64 encoded format
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          # The key alias
          alias: ${{ secrets.ALIAS }}
          # The password to the keystore
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          # The password for the key
          keyPassword: ${{ secrets.KEY_PASSWORD }} # optional
          # The working directory for action, default to build
          # buildDirectory: # optional
          # The output directory for sign, default to build/signed
          output: outputs/signed_apk/ # optional

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TZ: Asia/Shanghai
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: RELEASE.md
          draft: true
          prerelease: false

      - name: Upload Multiple Release Assets
        # You may pin to the exact commit or the version.
        # uses: NBTX/upload-release-assets@f68d1c91ca950f33ee35514883819c2bb053f487
        uses: NBTX/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TZ: Asia/Shanghai
        with:
          # The URL for uploading assets to the release
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # A glob of assets to upload
          targets: outputs/signed_apk/*.apk

      - name: Publish Release
        # You may pin to the exact commit or the version.
        uses: eregon/publish-release@v1.0.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TZ: Asia/Shanghai
        with:
          # The ID of the draft release to publish
          release_id: ${{ steps.create_release.outputs.id }}
